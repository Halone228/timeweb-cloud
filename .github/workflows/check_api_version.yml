name: "Check timeweb.cloud API version"

on:
  schedule:
    - cron: '0 18 * * *'
  push:
    branches:
      - master

jobs:
  check:
    name: "Check timeweb.cloud API version"
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.check.outputs.status }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.11

      - name: Install requirements
        run: pip install httpx

      - name: "Check timeweb.cloud API version"
        id: check
        run: |
          echo "API is $(python3 .github/api_check/check_api_ver.py --check --batch)"
          echo "status=$(python3 .github/api_check/check_api_ver.py --check --batch)" >> $GITHUB_OUTPUT

  create_issue:
    name: "Create issue"
    needs: check
    if: needs.check.outputs.status == 'outdated'
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    outputs:
      issue_url: ${{ steps.issue.outputs.url }}
    permissions:
      issues: write
      contents: read
      packages: read
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.11

      - name: Install requirements
        run: pip install httpx

      - name: Creating issue
        run: python3 .github/api_check/create_issue.py $(python3 .github/api_check/check_api_ver.py --actual_etag --batch)

      - name: Get issue url
        id: issue
        run: |
          echo "url=$(python3 .github/api_check/create_issue.py --get-link $(python3 .github/api_check/check_api_ver.py --actual_etag --batch))" >> $GITHUB_OUTPUT

  send_notify:
    name: "Send notification"
    needs: [check, create_issue]
    if: needs.check.outputs.status == 'outdated'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.11

      - name: Install requirements
        run: pip install httpx

      - name: Set env
        run: |
          echo "old=$(python3 .github/api_check/check_api_ver.py --etag --batch)" >> $GITHUB_ENV
          echo "new=$(python3 .github/api_check/check_api_ver.py --actual_etag --batch)" >> $GITHUB_ENV
          echo "issue_url=${{ needs.create_issue.outputs.issue_url }}" >> $GITHUB_ENV

      - name: Send Telegram message
        uses: appleboy/telegram-action@v0.1.1
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            API version changed from ${{ env.old }} to ${{ env.new }}

            See changes: https://timeweb.cloud/api-docs
            Issue: ${{ env.issue_url }}
